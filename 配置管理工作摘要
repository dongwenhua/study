
工作目标之一 配置管理
整理 开发环境 打包环境 编辑器使用环境 （测试环境）代码环境 git svn 代码权限
优化各环境搭建更新流程
版本控制 （）
配置管理架构
配置管理员定期维护配置库，打包环境 各服务器的更新 例如清除垃圾文件、备份配置库等。
服务器的选择、命名规范
存储区的定位
开发人员及组的命名规约等

实施配置管理：
1．规划、调整网络开发环境
网络的带宽、拓扑结构
服务器的选择、命名规范
存储区的定位
开发人员及组的命名规约等

2．设计配置管理库
根据项目开发的要求，设计开发资源的存储模式，
良好的存储模式有利于减轻管理上的负担，
增强配置管理库的访问性能，同时便于控制访问权限，保护软件资产。

3．定义配置管理系统的角色
在此阶段，需要确定与配置管理相关的所有角色，
包括他所有角色相应的活动。在开发过程中，
一个开发人员可能兼任多种角色，
但一项任务在同一时刻只能由一个角色来执行。
一般配置管理中的角色主要包括：
项目经理：项目经理在配置管理方面的职责是依靠配置管理员、系统管理员和系统体系结构设计人员

的帮助，制定项目的组织结构和配置管理策略。这些工作包括：定制开发子系统，定制访问控制，制

定常用策略，制定集成里程碑，以及进行系统集成。
配置管理员：配置管理员的职责是根据项目经理制定的开发组织结构和策略，实施、维护配置管理的

环境。其主要职责如下：创建配置管理库，对存储库进行日常备份和恢复，维护配置管理环境，及管

理配置管理相关的用户。
软件开发人员：软件开发人员依据项目的开发和配置管理策略，创建、修改和测试开发工件。
集成人员：对软件进行归并，形成相应的基线或发布版本。
QA人员：需要对软件配置管理有较深的认识，其主要工作是跟踪当前项目的状态，测试，报告错误，

并验证其修复结果。

4．制定配置管理流程
这是配置管理实施的一个重要阶段，其主要目的是根据项目开发的需要，制定相应的配置管理流程，

以更好地支持开发，主要活动包括：
定制并行开发策略：合理的并行开发策略应该具有以下特点：协调项目的复杂性和需求，统一创建分

支类型和元数据，为开发过程中的变更集成制定有效的规范，适时反映开发过程中方法和需求的变化

。
发布版本管理：软件开发过程中的一个关键活动是提取工件的相关版本，以形成软件系统的阶段版本

或发布版本，我们一般将其称为稳定基线。一个稳定基线代表新开发活动的开始，而一系列定制良好

的活动之后又会产生一个新的稳定基线。有效地利用此项功能，在项目开发过程中可以自始至终管理

、跟踪工件版本间的关联。


一般来讲，实施配置管理系统，相关人员需要接受以下培训：
管理员培训：针对配置管理员，主要学习配置管理工具管理相关内容。
开发人员培训：针对开发人员，主要学习配置管理工具与开发相关的常用操作。
管理流程培训：针对全体人员，目的是了解配置管理策略和流程，以及如何与开发管理、项目管理相

结合


在你的列表里一定要有这么一份报告。
它记录了本轮迭代所有要提测的feature，
feature的owner是谁。提测的deadline是哪天，
开发过程中有问题么，有没有提测延期的风险，
提测后遇到过什么问题，测试的QA是谁，当前的测试进度怎么样。
以及当前有多少bug，其中p1和p2的有多少，p3，4，5的bug有多少，
当前的bug情况有可能危及到发布么。还有本轮迭代是否有非功能性的重构，
优化，是否对性能有要求，如果有，性能测试的计划和用例的也要跟踪。还有兼容性，部署等等。

自动化部署，上线，备份，管理
