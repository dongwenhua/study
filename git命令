git commit  查看更新信息
git clean -f 清除   
git reset --hard 清除
git stash 清除本地所有更改
git fetch 相当于是从远程获取最新版本到本地，不会自动merge
git status 查看状态
git pull -r 相当于是从远程获取最新版本并merge到本地
git add (修改文件)
git commit -m (添加说明)
git push  推送
git checkout 恢复某个文件
代码存入.bash内
alias http-proxy-show='env|grep http'
alias http-proxy-on='export http_proxy=http://127.0.0.1:8123; export https_proxy=http://127.0.0.1:8123; http-proxy-show'
alias http-proxy-off='unset http_proxy; unset https_proxy'
.通过下面命令可切换代理
http-proxy-show
http-proxy-on
http-proxy-off

The file will have its original line endings in your working directory.
git config --global core.autocrlf false


shiyou gitlab token 密码 写入凭据
zJEuiLj6-3usVsDvebLw

不需要在两次提交中完成此操作，可以添加文件并在单个提交中标记它为可执行文件：

C:\Temp\TestRepo>touch foo.sh

C:\Temp\TestRepo>git add foo.sh

C:\Temp\TestRepo>git ls-files --stage
100644 e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 0       foo.sh
添加后，模式是0644(即，不可执行)。但是，我们可以在提交之前将其标记为可执行文件：

C:\Temp\TestRepo>git update-index --chmod=+x foo.sh

C:\Temp\TestRepo>git ls-files --stage
100755 e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 0       foo.sh
现在文件是模式0755(可执行文件)。

C:\Temp\TestRepo>git commit -m"Executable!"
[master (root-commit) 1f7a57a] Executable!
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100755 foo.sh
现在，就有了一个单独的提交文件和一个可执行文件。
